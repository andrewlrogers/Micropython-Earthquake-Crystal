import urequests, json
from utime import mktime, localtime
from time import sleep, ticks_ms
import machine, neopixel
import math


""" N E O P I X E L S """
""" I N I T I A L I Z E """
np = neopixel.NeoPixel(machine.Pin(neopixel_pin), number_of_neopixels)
#np.fill((0,0,0)) #Set's the led's to off
#np.write()

""" L I G H T """
""" F U N C T I O N S """

# palette for led's
mag_color = {'10':(255,0,0), '9':(228, 9, 55), '8':(228, 19, 109), '7':(228, 29, 158), '6':(228, 39, 203), '5':(211, 49, 228), '4':(175, 59, 227), '3':(143, 69, 227), '2':(115,79,227), '1':(92,89,227), '0':(0,52,255)}

def lerp(x, x0, x1, y0, y1):
    return y0 + (x-x0)*((y1-y0)/(x1-x0))

def chase(magnitude): #quick spin
    COLOR_A = mag_color[(str(magnitude)[0])]
    COLOR_B = (200, 100, 10)
    for t in range (10):
        for pixel in range(number_of_neopixels):
            np.fill((0,0,0))
            np.write()
            np[pixel]= COLOR_B
            np.write()
            sleep(.01)
    np.fill(COLOR_A)
    np.write()

def diminish(): #slowly diminishes color of led over time.
    for pixel in range(number_of_neopixels):
        red = np[pixel][0]
        green = np[pixel][1]
        blue = np[pixel][2]
        if red > 9:
            red = red - 10
        else:
            red = 0
        if green > 9:
            green = green - 10
        else:
            green = 0
        if blue > 9:
            blue = blue - 10
        else:
            blue = 0
        np[pixel] = (red, green, blue)
        np.write()
        sleep(.01)

def pulse(magnitude): #Pulses magnitude color with yellow before setting to mag_color
    COLOR_A = mag_color[(str(magnitude)[0])]
    COLOR_B = (200,100,10)

    for m in range(100):
        current = ticks_ms()
        x = math.sin(2.0 * math.pi * .001 * current)
        red = lerp(x, -1.0, 1.0, COLOR_A[0], COLOR_B[0])
        green = lerp(x, -1.0, 1.0, COLOR_A[1], COLOR_B[1])
        blue = lerp(x, -1.0, 1.0, COLOR_A[2], COLOR_B[2])
        np.fill((int(red), int(green), int(blue)))
        np.write()
        sleep(0.01)
    np.fill(COLOR_A)
    np.write()

def mag_light(magnitude): #changes the color of a light depending on magnitude
    magnitude = (str(magnitude)[0])
    np.fill(mag_color[magnitude])
    np.write()




diminish()
